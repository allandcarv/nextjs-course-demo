{"ast":null,"code":"import { MongoClient, ObjectId } from 'mongodb';\n\nconst connection = async collection => {\n  const client = new MongoClient('mongodb+srv://react-course:react-course-pass@cluster0.7s65w.mongodb.net/meetups?retryWrites=true&w=majority');\n  await client.connect();\n  const db = client.db();\n  const result = db.collection(collection);\n  return result;\n};\n\nexport const find = async (collection, property) => {\n  const conn = await connection(collection);\n  const params = property && ({}, {\n    [property]: 1\n  });\n  const result = await conn.find(params).toArray();\n  client.close();\n  return result;\n};","map":{"version":3,"sources":["/Users/allan.carvalho/workspace/courses/react/complete-guide/section-23_next-js/nextjs-project/shared/util/db.js"],"names":["MongoClient","ObjectId","connection","collection","client","connect","db","result","find","property","conn","params","toArray","close"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,UAAU,GAAG,MAAOC,UAAP,IAAsB;AACrC,QAAMC,MAAM,GAAG,IAAIJ,WAAJ,CAAgB,6GAAhB,CAAf;AAEA,QAAMI,MAAM,CAACC,OAAP,EAAN;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,MAAM,GAAGD,EAAE,CAACH,UAAH,CAAcA,UAAd,CAAf;AAEA,SAAOI,MAAP;AACH,CAVD;;AAYA,OAAO,MAAMC,IAAI,GAAG,OAAOL,UAAP,EAAmBM,QAAnB,KAAgC;AAChD,QAAMC,IAAI,GAAG,MAAMR,UAAU,CAACC,UAAD,CAA7B;AAEA,QAAMQ,MAAM,GAAGF,QAAQ,KAAK,IAAI;AAAE,KAACA,QAAD,GAAY;AAAd,GAAT,CAAvB;AAEA,QAAMF,MAAM,GAAG,MAAMG,IAAI,CAACF,IAAL,CAAUG,MAAV,EAAkBC,OAAlB,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAON,MAAP;AACH,CAVM","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\n\nconst connection = async (collection) => {\n    const client = new MongoClient('mongodb+srv://react-course:react-course-pass@cluster0.7s65w.mongodb.net/meetups?retryWrites=true&w=majority')\n\n    await client.connect();\n\n    const db = client.db();\n\n    const result = db.collection(collection);\n\n    return result;\n}\n\nexport const find = async (collection, property) => {\n    const conn = await connection(collection);\n\n    const params = property && ({}, { [property]: 1 } );\n\n    const result = await conn.find(params).toArray();\n\n    client.close();\n\n    return result;\n}"]},"metadata":{},"sourceType":"module"}